# Common pattern layout for appenders
#log4j2.pattern = %d{ISO8601} | %-5p | %-16t | %-32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n

# Root logger
log4j2.rootLogger.level = WARN
log4j2.rootLogger.appenderRefs = out, osgi
log4j2.rootLogger.appenderRef.out.ref = LOGFILE
log4j2.rootLogger.appenderRef.osgi.ref = OSGI

# Karaf Shell logger
log4j2.logger.shell.name = org.apache.karaf.shell.support
log4j2.logger.shell.level = OFF
log4j2.logger.shell.appenderRefs = stdout
log4j2.logger.shell.appenderRef.stdout.ref = STDOUT

# Security audit logger
log4j2.logger.audit.name = org.apache.karaf.jaas.modules.audit
log4j2.logger.audit.level = INFO
log4j2.logger.audit.additivity = false
log4j2.logger.audit.appenderRefs = audit
log4j2.logger.audit.appenderRef.audit.ref = AUDIT

# openHAB specific logger configuration

log4j2.logger.openhab.name = org.openhab
log4j2.logger.openhab.level = INFO

log4j2.logger.smarthome.name = org.eclipse.smarthome
log4j2.logger.smarthome.level = INFO

log4j2.logger.smarthomeItemStateEvent.name = smarthome.event.ItemStateEvent
log4j2.logger.smarthomeItemStateEvent.level = ERROR
log4j2.logger.smarthomeItemAddedEvent.name = smarthome.event.ItemAddedEvent
log4j2.logger.smarthomeItemAddedEvent.level = ERROR
log4j2.logger.smarthomeItemRemovedEvent.name = smarthome.event.ItemRemovedEvent
log4j2.logger.smarthomeItemRemovedEvent.level = ERROR
log4j2.logger.smarthomeThingStatusInfoEvent.name = smarthome.event.ThingStatusInfoEvent
log4j2.logger.smarthomeThingStatusInfoEvent.level = ERROR
log4j2.logger.smarthomeThingAddedEvent.name = smarthome.event.ThingAddedEvent
log4j2.logger.smarthomeThingAddedEvent.level = ERROR
log4j2.logger.smarthomeThingRemovedEvent.name = smarthome.event.ThingRemovedEvent
log4j2.logger.smarthomeThingRemovedEvent.level = ERROR
log4j2.logger.smarthomeInboxUpdatedEvent.name = smarthome.event.InboxUpdatedEvent
log4j2.logger.smarthomeInboxUpdatedEvent.level = ERROR

log4j2.logger.events.name = smarthome.event
log4j2.logger.events.level = INFO
log4j2.logger.events.additivity = false
log4j2.logger.events.appenderRefs = event
log4j2.logger.events.appenderRef.event.ref = EVENT
log4j2.logger.events.appenderRef.osgi.ref = OSGI

log4j2.logger.jupnp.name = org.jupnp
log4j2.logger.jupnp.level = ERROR

log4j2.logger.jmdns.name = javax.jmdns
log4j2.logger.jmdns.level = ERROR

# This suppresses all Maven download issues from the log when doing feature installations
# as we are logging errors ourselves in a nicer way anyhow.
log4j2.logger.paxurl.name = org.ops4j.pax.url.mvn.internal.AetherBasedResolver
log4j2.logger.paxurl.level = ERROR

# Filters known issues of pax-web (issue link to be added here).
# Can be removed once the issues are resolved in an upcoming version.
log4j2.logger.paxweb.name = org.ops4j.pax.web.pax-web-runtime
log4j2.logger.paxweb.level = OFF

# Filters known issues of lsp4j, see
# https://github.com/eclipse/smarthome/issues/4639
# https://github.com/eclipse/smarthome/issues/4629
# https://github.com/eclipse/smarthome/issues/4643
# Can be removed once the issues are resolved in an upcoming version.
log4j2.logger.lsp4j.name = org.eclipse.lsp4j
log4j2.logger.lsp4j.level = OFF

# Filters known issues of KarServiceImpl, see
# https://github.com/openhab/openhab-distro/issues/519#issuecomment-351944506
# Can be removed once the issues are resolved in an upcoming version.
log4j2.logger.karservice.name = org.apache.karaf.kar.internal.KarServiceImpl
log4j2.logger.karservice.level = ERROR


# Appenders configuration

# Console appender not used by default (see log4j2.rootLogger.appenderRefs)
log4j2.appender.console.type = Console
log4j2.appender.console.name = STDOUT
log4j2.appender.console.layout.type = PatternLayout
log4j2.appender.console.layout.pattern = %d{HH:mm:ss.SSS} [%-5.5p] [%-36.36c] - %m%n

# Rolling file appender
log4j2.appender.out.type = RollingRandomAccessFile
log4j2.appender.out.name = LOGFILE
log4j2.appender.out.fileName = ${openhab.logdir}/openhab.log
log4j2.appender.out.filePattern = ${openhab.logdir}/openhab.log.%i
log4j2.appender.out.immediateFlush = true
log4j2.appender.out.append = true
log4j2.appender.out.layout.type = PatternLayout
log4j2.appender.out.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} [%-5.5p] [%-36.36c] - %m%n
log4j2.appender.out.policies.type = Policies
log4j2.appender.out.policies.size.type = SizeBasedTriggeringPolicy
log4j2.appender.out.policies.size.size = 16MB

# Event log appender
log4j2.appender.event.type = RollingRandomAccessFile
log4j2.appender.event.name = EVENT
log4j2.appender.event.fileName = ${openhab.logdir}/events.log
log4j2.appender.event.filePattern = ${openhab.logdir}/events.log.%i
log4j2.appender.event.immediateFlush = true
log4j2.appender.event.append = true
log4j2.appender.event.layout.type = PatternLayout
log4j2.appender.event.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} [%-26.26c] - %m%n
log4j2.appender.event.policies.type = Policies
log4j2.appender.event.policies.size.type = SizeBasedTriggeringPolicy
log4j2.appender.event.policies.size.size = 16MB

# Audit file appender
log4j2.appender.audit.type = RollingRandomAccessFile
log4j2.appender.audit.name = AUDIT
log4j2.appender.audit.fileName = ${openhab.logdir}/audit.log
log4j2.appender.audit.filePattern = ${openhab.logdir}/audit.log.%i
log4j2.appender.audit.append = true
log4j2.appender.audit.layout.type = PatternLayout
log4j2.appender.audit.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} [%-5.5p] [%-36.36c] - %m%n
log4j2.appender.audit.policies.type = Policies
log4j2.appender.audit.policies.size.type = SizeBasedTriggeringPolicy
log4j2.appender.audit.policies.size.size = 8MB

# OSGi appender
log4j2.appender.osgi.type = PaxOsgi
log4j2.appender.osgi.name = OSGI
log4j2.appender.osgi.filter = *
#### TYPES OF LOGGERS ####
#### NOTE ABOUT ADDITIVITY: You can create sub-appenders using a dot but ".logsetup" must be added in the end E.G: UAAL.MW should be UAAL.MW.logsetup


# CONSOLE: Shows logs on the CONSOLE 
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=%d{HH:mm:ss.SSS} - %-5p - [%t]  %c - %m%n

# SIFT: Used by Karaf for its own purposes
log4j.appender.sift=org.apache.log4j.sift.MDCSiftingAppender
log4j.appender.sift.key=bundle.name
log4j.appender.sift.default=karaf
log4j.appender.sift.appender=org.apache.log4j.FileAppender
log4j.appender.sift.appender.layout=org.apache.log4j.PatternLayout
log4j.appender.sift.appender.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %m%n
log4j.appender.sift.appender.file=${karaf.data}/log/$\\{bundle.name\\}.log
log4j.appender.sift.appender.append=true

# KARAF: Stores logs into file "karaf.log"
log4j.appender.KARAF=org.apache.log4j.RollingFileAppender
log4j.appender.KARAF.layout=org.apache.log4j.PatternLayout
log4j.appender.KARAF.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.KARAF.file=${karaf.data}/log/karaf.log
log4j.appender.KARAF.append=true
log4j.appender.KARAF.maxFileSize=10MB
log4j.appender.KARAF.maxBackupIndex=100

# SLP: Stores logs into file "slp.log"
log4j.appender.SLP=org.apache.log4j.RollingFileAppender
log4j.appender.SLP.layout=org.apache.log4j.PatternLayout
log4j.appender.SLP.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-16.16t | %-16.16c{1} | %m%n
log4j.appender.SLP.file=${karaf.data}/log/slp.log
log4j.appender.SLP.append=true
log4j.appender.SLP.maxFileSize=10MB
log4j.appender.SLP.maxBackupIndex=100

# JGROUPS: Stores logs into file "jGroups.log"
log4j.appender.JGROUPS=org.apache.log4j.RollingFileAppender
log4j.appender.JGROUPS.layout=org.apache.log4j.PatternLayout
log4j.appender.JGROUPS.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-16.16t | %-16.16c{1} | %m%n
log4j.appender.JGROUPS.file=${karaf.data}/log/jGroups.log
log4j.appender.JGROUPS.append=true
log4j.appender.JGROUPS.maxFileSize=10MB
log4j.appender.JGROUPS.maxBackupIndex=100

# UAAL: Stores logs into file "uAAL.log"
log4j.appender.UAAL=org.apache.log4j.RollingFileAppender
log4j.appender.UAAL.layout=org.apache.log4j.PatternLayout
log4j.appender.UAAL.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.UAAL.file=${karaf.data}/log/uAAL.log
log4j.appender.UAAL.append=true
log4j.appender.UAAL.maxFileSize=10MB
log4j.appender.UAAL.maxBackupIndex=100

# UAAL.MW.logsetup: Stores logs into file "uAAL-MW.log"
log4j.appender.UAAL.MW.logsetup=org.apache.log4j.RollingFileAppender
log4j.appender.UAAL.MW.logsetup.layout=org.apache.log4j.PatternLayout
log4j.appender.UAAL.MW.logsetup.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.UAAL.MW.logsetup.file=${karaf.data}/log/uAAL-MW.log
log4j.appender.UAAL.MW.logsetup.append=true
log4j.appender.UAAL.MW.logsetup.maxFileSize=10MB
log4j.appender.UAAL.MW.logsetup.maxBackupIndex=100

# UAAL.SERV.logsetup: Stores logs into file "uAAL-SERV.log"
log4j.appender.UAAL.SERV.logsetup=org.apache.log4j.RollingFileAppender
log4j.appender.UAAL.SERV.logsetup.layout=org.apache.log4j.PatternLayout
log4j.appender.UAAL.SERV.logsetup.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.UAAL.SERV.logsetup.file=${karaf.data}/log/uAAL-SERV.log
log4j.appender.UAAL.SERV.logsetup.append=true
log4j.appender.UAAL.SERV.logsetup.maxFileSize=10MB
log4j.appender.UAAL.SERV.logsetup.maxBackupIndex=100

# UAAL.CTXT.logsetup: Stores logs into file "uAAL-CTXT.log"
log4j.appender.UAAL.CTXT.logsetup=org.apache.log4j.RollingFileAppender
log4j.appender.UAAL.CTXT.logsetup.layout=org.apache.log4j.PatternLayout
log4j.appender.UAAL.CTXT.logsetup.layout.ConversionPattern = %d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.UAAL.CTXT.logsetup.file=${karaf.data}/log/uAAL-CTXT.log
log4j.appender.UAAL.CTXT.logsetup.append=true
log4j.appender.UAAL.CTXT.logsetup.maxFileSize=10MB
log4j.appender.UAAL.CTXT.logsetup.maxBackupIndex=100

# APP: Stores logs into file "app.log"
log4j.appender.APP=org.apache.log4j.RollingFileAppender
log4j.appender.APP.layout=org.apache.log4j.PatternLayout
log4j.appender.APP.layout.ConversionPattern =  %d{ISO8601} | %-5.5p | %-50.50c | %m%n
log4j.appender.APP.file=${karaf.data}/log/app.log
log4j.appender.APP.append=true
log4j.appender.APP.maxFileSize=10MB
log4j.appender.APP.maxBackupIndex=100

# REMOTE: Stores logs in a remote server
log4j.appender.REMOTE=org.apache.log4j.net.SocketAppender
log4j.appender.REMOTE.Port=4712
log4j.appender.REMOTE.RemoteHost=localhost
log4j.appender.REMOTE.ReconnectionDelay=10000


#### ASSIGNATION OF LOGGERS ####
#### NOTE ABOUT ADDITIVITY: if a pckg is set to XXX.YYY.logsetup, it is also set to XXX. E.G: Setting UAAL.MW.logsetup also sets UAAL

# Root logger: Everything will inherit this
log4j.rootLogger = ERROR, KARAF, osgi:*
log4j.throwableRenderer=org.apache.log4j.OsgiThrowableRenderer

# To avoid flooding the log when using DEBUG level on an ssh connection and doing log:tail
log4j.logger.org.apache.sshd.server.channel.ChannelSession = ERROR

# ch.ethz.iks.slp.* : jSLP library 
log4j.logger.ch.ethz.iks.slp = ERROR, SLP

# org.jgroups.* : jGroups library
log4j.logger.org.jgroups = ERROR, JGROUPS

# org.universAAL.* : all universAAL packages
log4j.logger.org.universAAL = DEBUG, UAAL

# org.universAAL.middleware.* : universAAL middleware
log4j.logger.org.universAAL.mw = ERROR, UAAL.MW.logsetup

# org.universAAL.middleware.* : universAAL service bus
log4j.logger.org.universAAL.mw.bus.service = ERROR, UAAL.SERV.logsetup

# org.universAAL.middleware.* : universAAL context bus
log4j.logger.org.universAAL.mw.bus.context = ERROR, UAAL.CTXT.logsetup

# your application(s) package(s) here. (if your app uses uAAL's LogUtils then it is not the package but the artifact ID)
log4j.logger.org.universAAL.ri.gateway.multitenant = ERROR, APP, CONSOLE
